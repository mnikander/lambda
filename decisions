|Num| YYYY-MM-DD| Superseded by| Project   | Tags                 | Decision                                                 | Rationale |
|---| ---       | ---          | ---       | ---                  | ---                                                      | --- |
|001| 2025-04-06|              | lambda    | @Grammar             | use symbolic expressions like Lisp                       | Easy to lex and parse. Parentheses may negatively impact readability but also make the syntax homogeneous, simple, and easy to extend. |
|002| 2025-04-06|              | lambda    | @Project             | create a separate repository for the language spec       | Single source of truth for multiple implementations. Avoids duplicate documentation. Easy to version, reference, and maintain. |
|003| 2025-04-06|              | lambda    | @Project             | document things in the most compact form                 | Easy to maintain. Working software is the primary measure of progress. Out of date documentation is worse than no documentation. |
|004| 2025-04-06|              | lambda    | @Project             | markdown is the main format of documentation             | Can be viewed on GitHub directly. Simple. Works well with version control. Easier to write than Sphinx documentation.  |
|005| 2025-06-06|              | lambda    | @Project             | document core feature set in the README                  | The README is the first page you see when you open the repository on GitHub. It is good if the high level overview and the single-source of truth is right there.  |
|006| 2025-04-06|              | lambda    | @Project             | document language features in a table of type signatures | Easy to maintain. Fits on a single screen. Easy to search. Brainstorming or details and discussion can be placed in other markdown files and linked directly in the table. |
|007| 2025-04-06|              | lambda    | @Project             | document design decisions in a table                     | WHY something was done in a particular way is super important to allow understanding and revising decisions later on. Design documents proved to be out of date too quickly, and were too much work to maintain due to the broad scope. |
|008| 2025-04-06|              | lambda    | @Project             | document design decisions of all projects in one file    | Keeps implementation repositories focused on the code. It's easier to find decisions if they are all in one place. The project and tag fields should allow searching effectively. |
|009| 2025-04-06|              | lambda    | @Project             | omit file extension on decision file                     | Easy to open in a spreadsheet program to search and edit. Hopefully GitHub will still recognize it as Markdown and render it as such. |
